UEQ_Attractiveness <- data_23 %>%
select(Exp, VPNr, HMI, UEQ_Attractiveness) %>%
rename(score = UEQ_Attractiveness) %>%
add_column(scale = "UEQ_Attractiveness", .after = "VPNr")
UEQ_Perspicuity <- data_23 %>%
select(Exp, VPNr, HMI, UEQ_Perspicuity) %>%
rename(score = UEQ_Perspicuity) %>%
add_column(scale = "UEQ_Perspicuity", .after = "VPNr")
UEQ_Efficiency <- data_23 %>%
select(Exp, VPNr, HMI, UEQ_Efficiency) %>%
rename(score = UEQ_Efficiency) %>%
add_column(scale = "UEQ_Efficiency", .after = "VPNr")
UEQ_Dependability <- data_23 %>%
select(Exp, VPNr, HMI, UEQ_Dependability) %>%
rename(score = UEQ_Dependability) %>%
add_column(scale = "UEQ_Dependability", .after = "VPNr")
UEQ_Stimulation <- data_23 %>%
select(Exp, VPNr, HMI, UEQ_Stimulation) %>%
rename(score = UEQ_Stimulation) %>%
add_column(scale = "UEQ_Stimulation", .after = "VPNr")
UEQ_Novelty <- data_23 %>%
select(Exp, VPNr, HMI, UEQ_Novelty) %>%
rename(score = UEQ_Novelty) %>%
add_column(scale = "UEQ_Novelty", .after = "VPNr")
## build subset ##
UEQ_23 <- bind_rows(UEQ_Attractiveness, UEQ_Perspicuity, UEQ_Efficiency, UEQ_Dependability, UEQ_Stimulation, UEQ_Novelty) %>%
mutate(scale = factor(scale, levels = c("UEQ_Attractiveness", "UEQ_Perspicuity", "UEQ_Efficiency", "UEQ_Dependability", "UEQ_Stimulation", "UEQ_Novelty"), ordered = TRUE))
## lables ##
labels_UEQ = c("Attractiveness", "Perspicuity", "Efficiency", "Dependability", "Stimulation", "Novelty")
p <- ggplot(UEQ_23, aes(x=scale, y=score, fill=HMI)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = .8, ymax = 3),
fill = alpha("#92C46E", 0.02)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -.8, ymax = .8),
fill = alpha("#E9E898", 0.02)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -3, ymax = -.8),
fill = alpha("#F09C9A", 0.02)) + #E86865
stat_boxplot(geom ='errorbar', width = 0.3, lwd=0.2) +
geom_boxplot(outlier.shape = 21, lwd=0.2, outlier.size = 0.7) +
stat_summary(fun = mean, geom = "point" , colour="black", size=1, shape = 16) +
scale_x_discrete(labels = labels_UEQ) +
scale_y_continuous(limits = c(-3,3), breaks = seq(-3,3,1)) +
facet_grid(HMI ~ Exp) +
scale_fill_manual(values = c("#3070b3", "#98C6EA")) +
labs(y="Score", x="",
title = "User Experience Questionnaire") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
legend.position = "none",
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=30, vjust=.88, hjust=0.8, face = "plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_both <- which(grepl('strip-', g$layout$name))
fills <- c("#A2AD00", "#E37222","#3070b3", "#98C6EA")
k <- 1
for (i in strip_both) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
plot_23_pQ_UEQ_box <- g
ggsave(filename = "data/results/figures/23_pQ_UEQ_box.png", g,
width = 10, height = 6, dpi = 600, units = "in", device='png')
# 23_pQ_UEQ_barplot -----------------------------------------------------------
p <- ggplot(UEQ_summ_23, aes(x=as.factor(scale), y = mean, fill=as.factor(HMI) )) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = .8, ymax = 3),
fill = alpha("#92C46E", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -.8, ymax = .8),
fill = alpha("#E9E898", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -3, ymax = -.8),
fill = alpha("#F09C9A", 0.3)) + #E86865
geom_bar(stat = "identity", width = 0.7) +
geom_errorbar(width=.25, aes(ymin = mean - sd, ymax = mean + sd), colour="black", size = 0.2) +
scale_x_discrete(labels = labels_UEQ) +
scale_y_continuous(limits = c(-3,3), breaks = seq(-3,3,1)) +
facet_grid(HMI ~ Exp) +
scale_fill_manual(values = c("#3070b3", "#98C6EA")) +
labs(y="Score", x="",
title = "User Experience Questionnaire") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
legend.position = "none",
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=30, vjust=.88, hjust=0.8, face = "plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_both <- which(grepl('strip-', g$layout$name))
fills <- c("#A2AD00", "#E37222","#3070b3", "#98C6EA")
k <- 1
for (i in strip_both) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
plot_23_pQ_UEQ_bar <- g
ggsave(filename = "data/results/figures/23_pQ_UEQ_bar.png", g,
width = 10, height = 6, dpi = 600, units = "in", device='png')
# 23_pQ_UEQ_barplot -----------------------------------------------------------
p <- ggplot(UEQ_summ_23, aes(x=as.factor(scale), y = mean, fill=as.factor(HMI) )) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = .8, ymax = 3),
fill = alpha("#92C46E", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -.8, ymax = .8),
fill = alpha("#E9E898", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -3, ymax = -.8),
fill = alpha("#F09C9A", 0.3)) + #E86865
geom_bar(stat = "identity", width = 0.7) +
geom_errorbar(width=.25, aes(ymin = mean - sd, ymax = mean + sd), colour="black", size = 0.2) +
scale_x_discrete(labels = labels_UEQ) +
scale_y_continuous(limits = c(-3,3.5), breaks = seq(-3,3,1)) +
facet_grid(HMI ~ Exp) +
scale_fill_manual(values = c("#3070b3", "#98C6EA")) +
labs(y="Score", x="",
title = "User Experience Questionnaire") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
legend.position = "none",
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=30, vjust=.88, hjust=0.8, face = "plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
# 23_pQ_UEQ_barplot -----------------------------------------------------------
p <- ggplot(UEQ_summ_23, aes(x=as.factor(scale), y = mean, fill=as.factor(HMI) )) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = .8, ymax = 3),
fill = alpha("#92C46E", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -.8, ymax = .8),
fill = alpha("#E9E898", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -3, ymax = -.8),
fill = alpha("#F09C9A", 0.3)) + #E86865
geom_bar(stat = "identity", width = 0.7) +
geom_errorbar(width=.25, aes(ymin = mean - sd, ymax = mean + sd), colour="black", size = 0.2) +
scale_x_discrete(labels = labels_UEQ) +
scale_y_continuous(limits = c(-3,3.1), breaks = seq(-3,3,1)) +
facet_grid(HMI ~ Exp) +
scale_fill_manual(values = c("#3070b3", "#98C6EA")) +
labs(y="Score", x="",
title = "User Experience Questionnaire") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
legend.position = "none",
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=30, vjust=.88, hjust=0.8, face = "plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
# 23_pQ_UEQ_barplot -----------------------------------------------------------
p <- ggplot(UEQ_summ_23, aes(x=as.factor(scale), y = mean, fill=as.factor(HMI) )) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = .8, ymax = 3),
fill = alpha("#92C46E", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -.8, ymax = .8),
fill = alpha("#E9E898", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -3, ymax = -.8),
fill = alpha("#F09C9A", 0.3)) + #E86865
geom_bar(stat = "identity", width = 0.7) +
geom_errorbar(width=.25, aes(ymin = mean - sd, ymax = mean + sd), colour="black", size = 0.2) +
scale_x_discrete(labels = labels_UEQ) +
scale_y_continuous(limits = c(-3,3.2), breaks = seq(-3,3,1)) +
facet_grid(HMI ~ Exp) +
scale_fill_manual(values = c("#3070b3", "#98C6EA")) +
labs(y="Score", x="",
title = "User Experience Questionnaire") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
legend.position = "none",
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=30, vjust=.88, hjust=0.8, face = "plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_both <- which(grepl('strip-', g$layout$name))
fills <- c("#A2AD00", "#E37222","#3070b3", "#98C6EA")
k <- 1
for (i in strip_both) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
# 23_pQ_UEQ_barplot -----------------------------------------------------------
p <- ggplot(UEQ_summ_23, aes(x=as.factor(scale), y = mean, fill=as.factor(HMI) )) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = .8, ymax = 3),
fill = alpha("#92C46E", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -.8, ymax = .8),
fill = alpha("#E9E898", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -3, ymax = -.8),
fill = alpha("#F09C9A", 0.3)) + #E86865
geom_bar(stat = "identity", width = 0.7) +
geom_errorbar(width=.25, aes(ymin = mean - sd, ymax = mean + sd), colour="black", size = 0.2) +
scale_x_discrete(labels = labels_UEQ) +
scale_y_continuous(limits = c(-3,3.15), breaks = seq(-3,3,1)) +
facet_grid(HMI ~ Exp) +
scale_fill_manual(values = c("#3070b3", "#98C6EA")) +
labs(y="Score", x="",
title = "User Experience Questionnaire") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
legend.position = "none",
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=30, vjust=.88, hjust=0.8, face = "plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
# 23_pQ_UEQ_barplot -----------------------------------------------------------
p <- ggplot(UEQ_summ_23, aes(x=as.factor(scale), y = mean, fill=as.factor(HMI) )) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = .8, ymax = 3),
fill = alpha("#92C46E", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -.8, ymax = .8),
fill = alpha("#E9E898", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -3, ymax = -.8),
fill = alpha("#F09C9A", 0.3)) + #E86865
geom_bar(stat = "identity", width = 0.7) +
geom_errorbar(width=.25, aes(ymin = mean - sd, ymax = mean + sd), colour="black", size = 0.2) +
scale_x_discrete(labels = labels_UEQ) +
scale_y_continuous(limits = c(-3,3.16), breaks = seq(-3,3,1)) +
facet_grid(HMI ~ Exp) +
scale_fill_manual(values = c("#3070b3", "#98C6EA")) +
labs(y="Score", x="",
title = "User Experience Questionnaire") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
legend.position = "none",
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=30, vjust=.88, hjust=0.8, face = "plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
# 23_pQ_UEQ_barplot -----------------------------------------------------------
p <- ggplot(UEQ_summ_23, aes(x=as.factor(scale), y = mean, fill=as.factor(HMI) )) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = .8, ymax = 3),
fill = alpha("#92C46E", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -.8, ymax = .8),
fill = alpha("#E9E898", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -3, ymax = -.8),
fill = alpha("#F09C9A", 0.3)) + #E86865
geom_bar(stat = "identity", width = 0.7) +
geom_errorbar(width=.25, aes(ymin = mean - sd, ymax = mean + sd), colour="black", size = 0.2) +
scale_x_discrete(labels = labels_UEQ) +
scale_y_continuous(limits = c(-3,3.17), breaks = seq(-3,3,1)) +
facet_grid(HMI ~ Exp) +
scale_fill_manual(values = c("#3070b3", "#98C6EA")) +
labs(y="Score", x="",
title = "User Experience Questionnaire") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
legend.position = "none",
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=30, vjust=.88, hjust=0.8, face = "plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
# 23_pQ_UEQ_barplot -----------------------------------------------------------
p <- ggplot(UEQ_summ_23, aes(x=as.factor(scale), y = mean, fill=as.factor(HMI) )) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = .8, ymax = 3),
fill = alpha("#92C46E", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -.8, ymax = .8),
fill = alpha("#E9E898", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -3, ymax = -.8),
fill = alpha("#F09C9A", 0.3)) + #E86865
geom_bar(stat = "identity", width = 0.7) +
geom_errorbar(width=.25, aes(ymin = mean - sd, ymax = mean + sd), colour="black", size = 0.2) +
scale_x_discrete(labels = labels_UEQ) +
scale_y_continuous(limits = c(-3,3.18), breaks = seq(-3,3,1)) +
facet_grid(HMI ~ Exp) +
scale_fill_manual(values = c("#3070b3", "#98C6EA")) +
labs(y="Score", x="",
title = "User Experience Questionnaire") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
legend.position = "none",
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=30, vjust=.88, hjust=0.8, face = "plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
# 23_pQ_UEQ_barplot -----------------------------------------------------------
p <- ggplot(UEQ_summ_23, aes(x=as.factor(scale), y = mean, fill=as.factor(HMI) )) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = .8, ymax = 3),
fill = alpha("#92C46E", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -.8, ymax = .8),
fill = alpha("#E9E898", 0.3)) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -3, ymax = -.8),
fill = alpha("#F09C9A", 0.3)) + #E86865
geom_bar(stat = "identity", width = 0.7) +
geom_errorbar(width=.25, aes(ymin = mean - sd, ymax = mean + sd), colour="black", size = 0.2) +
scale_x_discrete(labels = labels_UEQ) +
scale_y_continuous(limits = c(-3,3.19), breaks = seq(-3,3,1)) +
facet_grid(HMI ~ Exp) +
scale_fill_manual(values = c("#3070b3", "#98C6EA")) +
labs(y="Score", x="",
title = "User Experience Questionnaire") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
legend.position = "none",
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=30, vjust=.88, hjust=0.8, face = "plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_both <- which(grepl('strip-', g$layout$name))
fills <- c("#A2AD00", "#E37222","#3070b3", "#98C6EA")
k <- 1
for (i in strip_both) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
plot_23_pQ_UEQ_bar <- g
ggsave(filename = "data/results/figures/23_pQ_UEQ_bar.png", g,
width = 10, height = 6, dpi = 600, units = "in", device='png')
#### preparations ####
rm(list = ls())
library(tidyverse)
library(afex)
# library(ggplot2);
library(reshape)
# library(lme4)
# library(nlme)
setwd("~/R/Multilab_Analysis")
#### import data & build subsets ####
data_all <- read.csv("data/preprocessed/multilab_subj_complete.csv", encoding = "UTF-8")
# build data sets
data_wide <- data_all %>%
mutate(Exp = case_when(
Exp == 1 ~ "e1",
Exp == 2 ~ "e2",
Exp == 3 ~ "e3",
TRUE ~ as.character(Exp))) %>%
mutate(Exp_name = Exp) %>%
mutate(VPNr = as.character(VPNr)) %>%
unite("VP", Exp_name,VPNr) %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI)) %>%
mutate(VP = factor(VP)) %>%
dplyr::select(c(Exp, HMI, VP,
ends_with("_ER"))) # adjustment needed for the other metrics
names(data_wide) <- c("Exp", "HMI", "VP", "TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12")
# restructure for long format
data_long<-melt(data_wide, id = c("Exp", "HMI", "VP"),
measured = c("TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12"))
names(data_long) <-c("Exp", "HMI", "VP", "TC","ER_score")
# create subsets
data_12 <- data_long %>%
filter(Exp != "e3")
data_23 <- data_long %>%
filter(Exp !="e1")
HMI
################################## ________ MM 12 ________ ########################################
model <- afex::mixed(ER_score ~ Exp*HMI + (HMI|TC) + (1|VP), data_12) # VP as grouping variable, TC as grouping variable and affecting the variability among HMIs
model # output = anova(model, type = 3)
summary(model) # output != output: model
a <- afex::mixed(ER_score ~ Exp*HMI + (HMI|TC) + (1|VP), data_12, family = gaussian(link=log), method = "LRT")
a
a <- afex::mixed(ER_score ~ Exp*HMI + (HMI|TC) + (1|VP), data_12, family = gaussian(link=identity), method = "LRT")
a
afex::mixed(ER_score ~ Exp*HMI + (HMI|TC) + (1|VP), data_12, method = "BP", family = "quapoisson")
View(data_12)
# # #### LevelObserved_Rep_score --------------------------------------------------------------
# build data sets
data_wide <- data_all %>%
mutate(Exp = case_when(
Exp == 1 ~ "e1",
Exp == 2 ~ "e2",
Exp == 3 ~ "e3",
TRUE ~ as.character(Exp))) %>%
mutate(Exp_name = Exp) %>%
mutate(VPNr = as.character(VPNr)) %>%
unite("VP", Exp_name,VPNr) %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI)) %>%
mutate(VP = factor(VP)) %>%
dplyr::select(c(Exp, HMI, VP,
LevelObserved_Rep_score)) # adjustment needed for the other metrics
names(data_wide) <- c("Exp", "HMI", "VP", "TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12")
# restructure for long format
data_long<-melt(data_wide, id = c("Exp", "HMI", "VP"),
measured = c("TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12"))
# # #### LevelObserved_Rep_score --------------------------------------------------------------
# build data sets
data_wide <- data_all %>%
mutate(Exp = case_when(
Exp == 1 ~ "e1",
Exp == 2 ~ "e2",
Exp == 3 ~ "e3",
TRUE ~ as.character(Exp))) %>%
mutate(Exp_name = Exp) %>%
mutate(VPNr = as.character(VPNr)) %>%
unite("VP", Exp_name,VPNr) %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI)) %>%
mutate(VP = factor(VP)) %>%
dplyr::select(c(Exp, HMI, VP,
ends_with("LevelObserved_Rep"))) # adjustment needed for the other metrics
names(data_wide) <- c("Exp", "HMI", "VP", "TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12")
# restructure for long format
data_long<-melt(data_wide, id = c("Exp", "HMI", "VP"),
measured = c("TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12"))
names(data_long) <-c("Exp", "HMI", "VP", "TC","LevelObserved_Rep_score")
# create subsets
data_12 <- data_long %>%
filter(Exp != "e3")
data_23 <- data_long %>%
filter(Exp !="e1")
## MM 12
model <- afex::mixed(LevelObserved_Rep_score ~ Exp*HMI + (HMI|TC) + (1|VP), data_12) # VP as grouping variable, TC as grouping variable and affecting the variability among HMIs
model # output = anova(model, type = 3)
a <- afex::mixed(ER_score ~ Exp*HMI + (HMI|TC) + (1|VP), data_12, family = gaussian(link=identity), method = "LRT")
a <- afex::mixed(LevelObserved_Rep_score ~ Exp*HMI + (HMI|TC) + (1|VP), data_12, family = gaussian(link=identity), method = "LRT")
afex::mixed(LevelObserved_Rep_score ~ Exp*HMI + (HMI|TC) + (1|VP), data_12, family = "binomial")
afex::mixed(LevelObserved_Rep_score ~ Exp*HMI + (HMI|TC) + (1|VP), data_12, family = "binomial", method = "LRT")
full <- afex::mixed(LevelObserved_Rep_score ~ Exp*HMI + (HMI|TC) + (1|VP), data_12, family = "binomial", method = "LRT")
half <- afex::mixed(LevelObserved_Rep_score ~ Exp*HMI + (1|TC) + (1|VP), data_12, family = "binomial", method = "LRT")
half
full
half
summary(half)
# # #### LevelObserved_Rep_score --------------------------------------------------------------
# build data sets
data_wide <- data_all %>%
mutate(Exp = case_when(
Exp == 1 ~ "e1",
Exp == 2 ~ "e2",
Exp == 3 ~ "e3",
TRUE ~ as.character(Exp))) %>%
mutate(Exp_name = Exp) %>%
mutate(VPNr = as.character(VPNr)) %>%
unite("VP", Exp_name,VPNr) %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI)) %>%
mutate(VP = factor(VP)) %>%
dplyr::select(c(Exp, HMI, VP,
ends_with("HandsOffAllow"))) # adjustment needed for the other metrics
# # #### LevelObserved_Rep_score --------------------------------------------------------------
# build data sets
data_wide <- data_all %>%
mutate(Exp = case_when(
Exp == 1 ~ "e1",
Exp == 2 ~ "e2",
Exp == 3 ~ "e3",
TRUE ~ as.character(Exp))) %>%
mutate(Exp_name = Exp) %>%
mutate(VPNr = as.character(VPNr)) %>%
unite("VP", Exp_name,VPNr) %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI)) %>%
mutate(VP = factor(VP)) %>%
dplyr::select(c(Exp, HMI, VP,
ends_with("HandsOffAllow"),
ends_with("EmailsAllow"))) # adjustment needed for the other metrics
# build data sets
data_wide <- data_all %>%
mutate(Exp = case_when(
Exp == 1 ~ "e1",
Exp == 2 ~ "e2",
Exp == 3 ~ "e3",
TRUE ~ as.character(Exp))) %>%
mutate(Exp_name = Exp) %>%
mutate(VPNr = as.character(VPNr)) %>%
unite("VP", Exp_name,VPNr) %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI)) %>%
mutate(VP = factor(VP)) %>%
dplyr::select(c(Exp, HMI, VP,
ends_with("HandsOffAllow"))) # adjustment needed for the other metrics
names(data_wide) <- c("Exp", "HMI", "VP",
"TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12")
# restructure for long format
data_long<-melt(data_wide, id = c("Exp", "HMI", "VP"),
measured = c("TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12"))
names(data_long) <-c("Exp", "HMI", "VP", "TC","task")
