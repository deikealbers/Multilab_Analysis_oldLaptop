#   --> calls either lme4 or glmer, depending on the family and reports p values (lmertest()))
#   --> per default: Type 3 sums of squares (recommended by Singmann)
#
# general model format:
#   fixed effects: Exp, HMI & Interaction Exp:HMI
#   random effects: TC (random intercept & slopes for HMI) & VP (random intercept)
#   --> afex::mixed(ER_score ~ Exp*HMI + (HMI|TC) + (1|VP), data_12_VP_l)
#
# depending on the format of the dependent data, the famiy and the method (for obtaining p values) is chosen:
#   --> for family = "gaussian" --> default method: "S"
#       for continuous decimal data with normal distribution, like weight, length, et al
#       model <- afex::mixed(AV ~ Exp*HMI + (HMI|TC) + (1|VP), data) --- calls lme4
#   --> for family = "poisson" --> method: "PB" | alternative "LRT" is not recommended, because TC has <40 factor levels
#       for positive integer or small natural number like count, individual number, frequency
#       model <- afex::mixed(AV ~ Exp*HMI + (HMI|TC) + (1|VP), data, method = "PB", family = "poisson") --- calls glmer
#   --> for family = "binomial" --> method: "PB" | alternative "LRT" is not recommended, because TC has <40 factor levels
#       binary data like 0 and 1, or proportion like survival number vs death number, positive frequency vs negative frequency,
#       winning times vs the number of failtures, et alâ€¦
#       model <- afex::mixed(AV ~ Exp*HMI + (HMI|TC) + (1|VP), data, method = "PB", family = "binomial") --- calls glmer
#
#### readme - Comments to model structure ####
#     factors of interest: exp + HMI
#     other pot. influencing factors: TC (different situations, different variances!) & VP (grouping variable)
#                                     potentially Age & gender, or even other sd variables,
#                                     but not of interest, too complicated and (partially) incl. in VP
# other model structures:
#   tested with AV ER_score
# produce errors/not possible with data
# afex::mixed(ER_score ~ Exp*HMI + (Exp*HMI|VP:TC), data_12_VP_l) # error
# afex::mixed(ER_score ~ Exp*HMI + (Exp*HMI|TC:VP), data_12_VP_l) # error
# afex::mixed(ER_score ~ Exp*HMI + (Exp*HMI|VP/TC), data_12_VP_l) # error
# afex::mixed(ER_score ~ Exp*HMI + (Exp*HMI|TC/VP), data_12_VP_l) # error
# afex::mixed(ER_score ~ Exp*HMI + (Exp*HMI|TC) + (1|VP:TC), data_12_VP_l) # error
# afex::mixed(ER_score ~ Exp*HMI + VP + (Exp*HMI|TC), data_12_VP_l) # error
#
# possible models
# afex::mixed(ER_score ~ Exp*HMI + (HMI|TC), data_12_VP_l) # VP not included
# afex::mixed(ER_score ~ Exp*HMI + (Exp*HMI|TC), data_12_VP_l) # VP not included, no reason, why Exp should be included in r.e.
# afex::mixed(ER_score ~ Exp*HMI + (Exp*HMI|TC) + (1|VP), data_12_VP_l) # VP included, r.intercept & slope for Exp*HMI among TC
#                                                                       # no reason, why Exp should be included in r.e.
#                                                                       # receives singular fit warning
# afex::mixed(ER_score ~ Exp*HMI + (HMI|TC) + (1|VP), data_12_VP_l) # VP included, r.intercept & slope for HMI among TC <-- does not converge for mode awareness
#
# chosen models
# afex::mixed(ER_score ~ Exp*HMI + (1|TC) + (1|VP), data_12_VP_l) # only random intercepts for text case and VP
# for AvailReasonCorrect & TransProblems: does not converge --> omit random factor: 1|TC)
#### readme - metrics ####
#     LevelObserved_Rep_score       --> binomial, link = default
#     EmailsAllow_Observed_score    --> binomial, link = default <--- combined (Both) does not converge
#     HandsOffAllow_Observed_score  --> binomial, link = default <--- combined (Both) does not converge
#     LevelObserved_Instr_score     --> binomial, link = default
#     AvailImplem_Rep_score         --> binomial, link = default
#     TransProblems_score           --> binomial, link = default
#     AvailReasonCorrect_score      --> binomial, link = default
#     ER_overall                    --> XX, link = XX ||| poisson or gaussian? maybe other links
#     attention ratio street        --> gaussian, link = default
#     gaze allocation time          --> gaussian, link = default
#     total glance time             --> gaussian, link = default
#     take-over time                --> gaussian, link = default
#     nr h-off detect. (TC 6,7,8)   --> poisson, link = default
# test with function: performance::check_normality(model) doesn't work,
# use the graphical inspection of the AV instead:
# ggplot(data_12, aes(ER_score)) +
#   geom_histogram(bins = 100)
#### import data ####
data_all <- read.csv("data/preprocessed/multilab_subj_complete.csv", encoding = "UTF-8")
c_model_model <- c("est_intercept", "est_Exp", "est_HMI", "est_Exp:HMI",
"stdErr_intercept", "stdErr_Exp", "stdErr_HMI", "stdErr_Exp:HMI",
"z_intercept", "z_Exp", "z_HMI", "z_Exp:HMI",
"p_intercept", "p_Exp", "p_HMI", "p_Exp:HMI")
c_model_aov <- c("Df_Exp", "Df_HMI", "Df_Exp:HMI",
"ChiSq_Exp", "ChiSq_HMI", "ChiSq_Exp:HMI",
"Df_ChiSq_Exp", "Df_ChiSq_HMI", "Df_ChiSq_Exp:HMI",
"p_ChiSq_Exp", "p_ChiSq_HMI", "p_ChiSq_Exp:HMI")
# # #### LevelObserved_Rep_score --------------------------------------------------------------
# build data sets
AV <- "LevelObserved_Rep"
data_wide <- data_all %>%
mutate(Exp = case_when(
Exp == 1 ~ "e1",
Exp == 2 ~ "e2",
Exp == 3 ~ "e3",
TRUE ~ as.character(Exp))) %>%
mutate(Exp_name = Exp) %>%
mutate(VPNr = as.character(VPNr)) %>%
unite("VP", Exp_name,VPNr) %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI)) %>%
mutate(VP = factor(VP)) %>%
dplyr::select(c(Exp, HMI, VP,
ends_with("LevelObserved_Rep"))) # adjustment needed for the other metrics
names(data_wide) <- c("Exp", "HMI", "VP", "TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12")
# restructure for long format
data_long<-melt(data_wide, id = c("Exp", "HMI", "VP"),
measured = c("TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12"))
names(data_long) <-c("Exp", "HMI", "VP", "TC","AV")
# create subsets
data_12 <- data_long %>%
filter(Exp != "e3")
data_23 <- data_long %>%
filter(Exp !="e1")
## MM_12
model_12 <- afex::mixed(AV ~ Exp*HMI + (1|TC) + (1|VP), data_12, family = binomial, method = "LRT")
summ_model_12 <- summary(model_12)
call <- toString(model_12[["call"]])
tab_model_12_model <- data.frame(matrix(unlist(summ_model_12[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_model) <- c_model_model
tab_model_12_aov <- data.frame(matrix(unlist(model_12[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_aov) <- c_model_aov
## MM_23
model_23 <- afex::mixed(AV ~ Exp*HMI + (1|TC) + (1|VP), data_23, family = "binomial", method = "LRT")
summ_model_23 <- summary(model_23)
call <- toString(model_23[["call"]])
tab_model_23_model <- data.frame(matrix(unlist(summ_model_23[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_model) <- c_model_model
tab_model_23_aov <- data.frame(matrix(unlist(model_23[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_aov) <- c_model_aov
# build table clm+aov
tab_MM_12 <- cbind(AV, call, tab_model_12_model, tab_model_12_aov)
tab_MM_23 <- cbind(AV, call, tab_model_23_model, tab_model_23_aov)
## build results table (first test different)
MM_results_table_12 <- tab_MM_12
MM_results_table_23 <- tab_MM_23
# # #### EmailsAllow_Observed_score --------------------------------------------------------------
# build data sets
AV <- "EmailsAllow_Observed"
data_wide <- data_all %>%
mutate(Exp = case_when(
Exp == 1 ~ "e1",
Exp == 2 ~ "e2",
Exp == 3 ~ "e3",
TRUE ~ as.character(Exp))) %>%
mutate(Exp_name = Exp) %>%
mutate(VPNr = as.character(VPNr)) %>%
unite("VP", Exp_name,VPNr) %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI)) %>%
mutate(VP = factor(VP)) %>%
dplyr::select(c(Exp, HMI, VP,
ends_with("EmailsAllow"))) # adjustment needed for the other metrics
names(data_wide) <- c("Exp", "HMI", "VP", "TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12")
# restructure for long format
data_long<-melt(data_wide, id = c("Exp", "HMI", "VP"),
measured = c("TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12"))
names(data_long) <-c("Exp", "HMI", "VP", "TC","AV")
# create subsets
data_12 <- data_long %>%
filter(Exp != "e3")
data_23 <- data_long %>%
filter(Exp !="e1")
## MM_12
model_12 <- afex::mixed(AV ~ Exp*HMI + (1|TC) + (1|VP), data_12, family = binomial, method = "LRT")
summ_model_12 <- summary(model_12)
call <- toString(model_12[["call"]])
tab_model_12_model <- data.frame(matrix(unlist(summ_model_12[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_model) <- c_model_model
tab_model_12_aov <- data.frame(matrix(unlist(model_12[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_aov) <- c_model_aov
## MM_23
model_23 <- afex::mixed(AV ~ Exp*HMI + (1|TC) + (1|VP), data_23, family = "binomial", method = "LRT")
summ_model_23 <- summary(model_23)
call <- toString(model_23[["call"]])
tab_model_23_model <- data.frame(matrix(unlist(summ_model_23[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_model) <- c_model_model
tab_model_23_aov <- data.frame(matrix(unlist(model_23[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_aov) <- c_model_aov
# build table clm+aov
tab_MM_12 <- cbind(AV, call, tab_model_12_model, tab_model_12_aov)
tab_MM_23 <- cbind(AV, call, tab_model_23_model, tab_model_23_aov)
## build results table (first test different)
MM_results_table_12 <- bind_rows(MM_results_table_12, tab_MM_12)
MM_results_table_23 <- bind_rows(MM_results_table_23, tab_MM_23)
# # #### HandsOffAllow_Observed_score --------------------------------------------------------------
# build data sets
AV <- "HandsOffAllow_Observed"
data_wide <- data_all %>%
mutate(Exp = case_when(
Exp == 1 ~ "e1",
Exp == 2 ~ "e2",
Exp == 3 ~ "e3",
TRUE ~ as.character(Exp))) %>%
mutate(Exp_name = Exp) %>%
mutate(VPNr = as.character(VPNr)) %>%
unite("VP", Exp_name,VPNr) %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI)) %>%
mutate(VP = factor(VP)) %>%
dplyr::select(c(Exp, HMI, VP,
ends_with("HandsOffAllow"))) # adjustment needed for the other metrics
names(data_wide) <- c("Exp", "HMI", "VP", "TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12")
# restructure for long format
data_long<-melt(data_wide, id = c("Exp", "HMI", "VP"),
measured = c("TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12"))
names(data_long) <-c("Exp", "HMI", "VP", "TC","AV")
# create subsets
data_12 <- data_long %>%
filter(Exp != "e3")
data_23 <- data_long %>%
filter(Exp !="e1")
## MM_12
model_12 <- afex::mixed(AV ~ Exp*HMI + (1|TC) + (1|VP), data_12, family = binomial, method = "LRT")
summ_model_12 <- summary(model_12)
call <- toString(model_12[["call"]])
tab_model_12_model <- data.frame(matrix(unlist(summ_model_12[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_model) <- c_model_model
tab_model_12_aov <- data.frame(matrix(unlist(model_12[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_aov) <- c_model_aov
## MM_23
model_23 <- afex::mixed(AV ~ Exp*HMI + (1|TC) + (1|VP), data_23, family = "binomial", method = "LRT")
summ_model_23 <- summary(model_23)
call <- toString(model_23[["call"]])
tab_model_23_model <- data.frame(matrix(unlist(summ_model_23[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_model) <- c_model_model
tab_model_23_aov <- data.frame(matrix(unlist(model_23[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_aov) <- c_model_aov
# build table clm+aov
tab_MM_12 <- cbind(AV, call, tab_model_12_model, tab_model_12_aov)
tab_MM_23 <- cbind(AV, call, tab_model_23_model, tab_model_23_aov)
## build results table (first test different)
MM_results_table_12 <- bind_rows(MM_results_table_12, tab_MM_12)
MM_results_table_23 <- bind_rows(MM_results_table_23, tab_MM_23)
# # #### LevelObserved_Instr_score --------------------------------------------------------------
# build data sets
AV <- "LevelObserved_Instr"
data_wide <- data_all %>%
mutate(Exp = case_when(
Exp == 1 ~ "e1",
Exp == 2 ~ "e2",
Exp == 3 ~ "e3",
TRUE ~ as.character(Exp))) %>%
mutate(Exp_name = Exp) %>%
mutate(VPNr = as.character(VPNr)) %>%
unite("VP", Exp_name,VPNr) %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI)) %>%
mutate(VP = factor(VP)) %>%
dplyr::select(c(Exp, HMI, VP,
ends_with("LevelObserved_Instr"))) # adjustment needed for the other metrics
names(data_wide) <- c("Exp", "HMI", "VP", "TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12")
# restructure for long format
data_long<-melt(data_wide, id = c("Exp", "HMI", "VP"),
measured = c("TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12"))
names(data_long) <-c("Exp", "HMI", "VP", "TC","AV")
# create subsets
data_12 <- data_long %>%
filter(Exp != "e3")
data_23 <- data_long %>%
filter(Exp !="e1")
## MM_12
model_12 <- afex::mixed(AV ~ Exp*HMI + (1|TC) + (1|VP), data_12, family = binomial, method = "LRT")
summ_model_12 <- summary(model_12)
call <- toString(model_12[["call"]])
tab_model_12_model <- data.frame(matrix(unlist(summ_model_12[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_model) <- c_model_model
tab_model_12_aov <- data.frame(matrix(unlist(model_12[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_aov) <- c_model_aov
## MM_23
model_23 <- afex::mixed(AV ~ Exp*HMI + (1|TC) + (1|VP), data_23, family = "binomial", method = "LRT")
summ_model_23 <- summary(model_23)
call <- toString(model_23[["call"]])
tab_model_23_model <- data.frame(matrix(unlist(summ_model_23[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_model) <- c_model_model
tab_model_23_aov <- data.frame(matrix(unlist(model_23[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_aov) <- c_model_aov
# build table clm+aov
tab_MM_12 <- cbind(AV, call, tab_model_12_model, tab_model_12_aov)
tab_MM_23 <- cbind(AV, call, tab_model_23_model, tab_model_23_aov)
## build results table (first test different)
MM_results_table_12 <- bind_rows(MM_results_table_12, tab_MM_12)
MM_results_table_23 <- bind_rows(MM_results_table_23, tab_MM_23)
# # #### AvailImplem_Rep_score --------------------------------------------------------------
# build data sets
AV <- "AvailImplem_Rep"
data_wide <- data_all %>%
mutate(Exp = case_when(
Exp == 1 ~ "e1",
Exp == 2 ~ "e2",
Exp == 3 ~ "e3",
TRUE ~ as.character(Exp))) %>%
mutate(Exp_name = Exp) %>%
mutate(VPNr = as.character(VPNr)) %>%
unite("VP", Exp_name,VPNr) %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI)) %>%
mutate(VP = factor(VP)) %>%
dplyr::select(c(Exp, HMI, VP,
ends_with("AvailImplem_Rep"))) # adjustment needed for the other metrics
names(data_wide) <- c("Exp", "HMI", "VP", "TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12")
# restructure for long format
data_long<-melt(data_wide, id = c("Exp", "HMI", "VP"),
measured = c("TC01", "TC02", "TC03", "TC04", "TC05", "TC06" , "TC07", "TC08", "TC09", "TC10", "TC11", "TC12"))
names(data_long) <-c("Exp", "HMI", "VP", "TC","AV")
# create subsets
data_12 <- data_long %>%
filter(Exp != "e3")
data_23 <- data_long %>%
filter(Exp !="e1")
## MM_12
model_12 <- afex::mixed(AV ~ Exp*HMI + (1|TC) + (1|VP), data_12, family = binomial, method = "LRT")
summ_model_12 <- summary(model_12)
call <- toString(model_12[["call"]])
tab_model_12_model <- data.frame(matrix(unlist(summ_model_12[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_model) <- c_model_model
tab_model_12_aov <- data.frame(matrix(unlist(model_12[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_aov) <- c_model_aov
## MM_23
model_23 <- afex::mixed(AV ~ Exp*HMI + (1|TC) + (1|VP), data_23, family = "binomial", method = "LRT")
summ_model_23 <- summary(model_23)
call <- toString(model_23[["call"]])
tab_model_23_model <- data.frame(matrix(unlist(summ_model_23[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_model) <- c_model_model
tab_model_23_aov <- data.frame(matrix(unlist(model_23[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_aov) <- c_model_aov
# build table clm+aov
tab_MM_12 <- cbind(AV, call, tab_model_12_model, tab_model_12_aov)
tab_MM_23 <- cbind(AV, call, tab_model_23_model, tab_model_23_aov)
## build results table (first test different)
MM_results_table_12 <- bind_rows(MM_results_table_12, tab_MM_12)
MM_results_table_23 <- bind_rows(MM_results_table_23, tab_MM_23)
# # #### AvailReasonCorrect_score --------------------------------------------------------------
# build data sets
AV <- "AvailReasonCorrect"
data_wide <- data_all %>%
mutate(Exp = case_when(
Exp == 1 ~ "e1",
Exp == 2 ~ "e2",
Exp == 3 ~ "e3",
TRUE ~ as.character(Exp))) %>%
mutate(Exp_name = Exp) %>%
mutate(VPNr = as.character(VPNr)) %>%
unite("VP", Exp_name,VPNr) %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI)) %>%
mutate(VP = factor(VP)) %>%
dplyr::select(c(Exp, HMI, VP,
ends_with("AvailReasonCorrect"))) # adjustment needed for the other metrics
names(data_wide) <- c("Exp", "HMI", "VP", "TC06", "TC10", "TC12")
# restructure for long format
data_long<-melt(data_wide, id = c("Exp", "HMI", "VP"),
measured = c("TC06", "TC10", "TC12"))
names(data_long) <-c("Exp", "HMI", "VP", "TC","AV")
# create subsets
data_12 <- data_long %>%
filter(Exp != "e3")
data_23 <- data_long %>%
filter(Exp !="e1")
## MM_12
model_12 <- afex::mixed(AV ~ Exp*HMI + (1|VP), data_12, family = binomial, method = "LRT")
summ_model_12 <- summary(model_12)
call <- toString(model_12[["call"]])
tab_model_12_model <- data.frame(matrix(unlist(summ_model_12[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_model) <- c_model_model
tab_model_12_aov <- data.frame(matrix(unlist(model_12[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_aov) <- c_model_aov
## MM_23
model_23 <- afex::mixed(AV ~ Exp*HMI + (1|VP), data_23, family = "binomial", method = "LRT")
summ_model_23 <- summary(model_23)
call <- toString(model_23[["call"]])
tab_model_23_model <- data.frame(matrix(unlist(summ_model_23[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_model) <- c_model_model
tab_model_23_aov <- data.frame(matrix(unlist(model_23[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_aov) <- c_model_aov
# build table clm+aov
tab_MM_12 <- cbind(AV, call, tab_model_12_model, tab_model_12_aov)
tab_MM_23 <- cbind(AV, call, tab_model_23_model, tab_model_23_aov)
## build results table (first test different)
MM_results_table_12 <- bind_rows(MM_results_table_12, tab_MM_12)
MM_results_table_23 <- bind_rows(MM_results_table_23, tab_MM_23)
# # #### TransProblems_score --------------------------------------------------------------
# build data sets
AV <- "TransProblems"
data_wide <- data_all %>%
mutate(Exp = case_when(
Exp == 1 ~ "e1",
Exp == 2 ~ "e2",
Exp == 3 ~ "e3",
TRUE ~ as.character(Exp))) %>%
mutate(Exp_name = Exp) %>%
mutate(VPNr = as.character(VPNr)) %>%
unite("VP", Exp_name,VPNr) %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI)) %>%
mutate(VP = factor(VP)) %>%
dplyr::select(c(Exp, HMI, VP,
ends_with("TransProblems"))) # adjustment needed for the other metrics
names(data_wide) <- c("Exp", "HMI", "VP", "TC03", "TC05", "TC09", "TC10", "TC11", "TC12")
# restructure for long format
data_long<-melt(data_wide, id = c("Exp", "HMI", "VP"),
measured = c("TC03", "TC05", "TC09", "TC10", "TC11", "TC12"))
names(data_long) <-c("Exp", "HMI", "VP", "TC","AV")
# create subsets
data_12 <- data_long %>%
filter(Exp != "e3")
data_23 <- data_long %>%
filter(Exp !="e1")
## MM_12
model_12 <- afex::mixed(AV ~ Exp*HMI + (1|VP), data_12, family = binomial, method = "LRT")
summ_model_12 <- summary(model_12)
call <- toString(model_12[["call"]])
tab_model_12_model <- data.frame(matrix(unlist(summ_model_12[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_model) <- c_model_model
tab_model_12_aov <- data.frame(matrix(unlist(model_12[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_aov) <- c_model_aov
## MM_23
model_23 <- afex::mixed(AV ~ Exp*HMI + (1|VP), data_23, family = "binomial", method = "LRT")
summ_model_23 <- summary(model_23)
call <- toString(model_23[["call"]])
tab_model_23_model <- data.frame(matrix(unlist(summ_model_23[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_model) <- c_model_model
tab_model_23_aov <- data.frame(matrix(unlist(model_23[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_aov) <- c_model_aov
# build table clm+aov
tab_MM_12 <- cbind(AV, call, tab_model_12_model, tab_model_12_aov)
tab_MM_23 <- cbind(AV, call, tab_model_23_model, tab_model_23_aov)
## build results table (first test different)
MM_results_table_12 <- bind_rows(MM_results_table_12, tab_MM_12)
MM_results_table_23 <- bind_rows(MM_results_table_23, tab_MM_23)
#
# # #### save results --------------------------------------------------------------
comparison <- c("12")
MM_results_table_12 <- cbind(comparison, MM_results_table_12)
comparison <- c("23")
MM_results_table_23 <- cbind(comparison, MM_results_table_23)
MM_results_table <- bind_rows(MM_results_table_12, MM_results_table_23)
View(MM_results_table)
## save
write_excel_csv(MM_results_table, "data/results/MM.csv")
rm(list=setdiff(ls(), c("MM_results_table", "data_all")))
View(MM_results_table)
# # #### TransProblems_score --------------------------------------------------------------
# build data sets
AV <- "TransProblems"
data_wide <- data_all %>%
mutate(Exp = case_when(
Exp == 1 ~ "e1",
Exp == 2 ~ "e2",
Exp == 3 ~ "e3",
TRUE ~ as.character(Exp))) %>%
mutate(Exp_name = Exp) %>%
mutate(VPNr = as.character(VPNr)) %>%
unite("VP", Exp_name,VPNr) %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI)) %>%
mutate(VP = factor(VP)) %>%
dplyr::select(c(Exp, HMI, VP,
ends_with("TransProblems"))) # adjustment needed for the other metrics
names(data_wide) <- c("Exp", "HMI", "VP", "TC03", "TC05", "TC09", "TC10", "TC11", "TC12")
# restructure for long format
data_long<-melt(data_wide, id = c("Exp", "HMI", "VP"),
measured = c("TC03", "TC05", "TC09", "TC10", "TC11", "TC12"))
names(data_long) <-c("Exp", "HMI", "VP", "TC","AV")
# create subsets
data_12 <- data_long %>%
filter(Exp != "e3")
data_23 <- data_long %>%
filter(Exp !="e1")
## MM_12
model_12 <- afex::mixed(AV ~ Exp*HMI + (1|VP), data_12, family = binomial, method = "PB")
summ_model_12 <- summary(model_12)
View(model_12)
call <- toString(model_12[["call"]])
tab_model_12_model <- data.frame(matrix(unlist(summ_model_12[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_model) <- c_model_model
## MM_23
model_23 <- afex::mixed(AV ~ Exp*HMI + (1|VP), data_23, family = "binomial", method = "PB")
summ_model_23 <- summary(model_23)
call <- toString(model_23[["call"]])
tab_model_23_model <- data.frame(matrix(unlist(summ_model_23[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_model) <- c_model_model
summ_model_23 <- summary(model_23)
call <- toString(model_23[["call"]])
tab_model_23_model <- data.frame(matrix(unlist(summ_model_23[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_model) <- c_model_model
tab_model_23_aov <- data.frame(matrix(unlist(model_23[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_aov) <- c_model_aov
c_model_model <- c("est_intercept", "est_Exp", "est_HMI", "est_Exp:HMI",
"stdErr_intercept", "stdErr_Exp", "stdErr_HMI", "stdErr_Exp:HMI",
"z_intercept", "z_Exp", "z_HMI", "z_Exp:HMI",
"p_intercept", "p_Exp", "p_HMI", "p_Exp:HMI")
c_model_aov <- c("Df_Exp", "Df_HMI", "Df_Exp:HMI",
"ChiSq_Exp", "ChiSq_HMI", "ChiSq_Exp:HMI",
"Df_ChiSq_Exp", "Df_ChiSq_HMI", "Df_ChiSq_Exp:HMI",
"p_ChiSq_Exp", "p_ChiSq_HMI", "p_ChiSq_Exp:HMI")
call <- toString(model_12[["call"]])
tab_model_12_model <- data.frame(matrix(unlist(summ_model_12[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_model) <- c_model_model
tab_model_12_aov <- data.frame(matrix(unlist(model_12[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_aov) <- c_model_aov
summ_model_12 <- summary(model_12)
call <- toString(model_12[["call"]])
tab_model_12_model <- data.frame(matrix(unlist(summ_model_12[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_model) <- c_model_model
tab_model_12_aov <- data.frame(matrix(unlist(model_12[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_12_aov) <- c_model_aov
summ_model_23 <- summary(model_23)
call <- toString(model_23[["call"]])
tab_model_23_model <- data.frame(matrix(unlist(summ_model_23[["coefficients"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_model) <- c_model_model
tab_model_23_aov <- data.frame(matrix(unlist(model_23[["anova_table"]]), nrow=1, byrow=TRUE),stringsAsFactors=FALSE)
names(tab_model_23_aov) <- c_model_aov
# build table clm+aov
tab_MM_12 <- cbind(AV, call, tab_model_12_model, tab_model_12_aov)
tab_MM_23 <- cbind(AV, call, tab_model_23_model, tab_model_23_aov)
## build results table (first test different)
MM_results_table_12 <- bind_rows(MM_results_table_12, tab_MM_12)
# build table clm+aov
tab_MM_12 <- cbind(AV, call, tab_model_12_model, tab_model_12_aov)
tab_MM_23 <- cbind(AV, call, tab_model_23_model, tab_model_23_aov)
tab_results_PB <- bind_rows(tab_MM_12, tab_MM_23)
write_excel_csv(tab_results_PB, "data/results/MM_PB.csv")
View(tab_results_PB)
View(MM_results_table)
