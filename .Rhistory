# Load packages ####
library(readxl)
library(psych)
# Define function for Wilcoxon effect size r ####
rFromWilcox <- function(wilcoxModel, N){
z <- qnorm(wilcoxModel$p.value/2)
r <- z/ sqrt(N)
cat(wilcoxModel$data.name, 'Effect Size, r = ', r)
}
# Import data ####
data_ped <- read_excel("R/3D_zebra/Wilcoxon_data.xlsx", sheet = "Pedestrians")
data_dri <- read_excel("R/3D_zebra/Wilcoxon_data.xlsx", sheet = "Drivers")
# Wilcoxon-Tests ####
wilcoxPed <- wilcox.test(Pedestrians~Cat, data = data_ped, paired = TRUE, conf.int = FALSE, correct= FALSE, na.action = na.exclude)
describeBy(data_ped$Pedestrians, data_ped$Cat)
boxplot(Pedestrians~Cat, data=data_ped)
wilcoxPed
rFromWilcox(wilcoxPed, 402)
wilcoxDri <- wilcox.test(Drivers~Cat, data = data_dri, paired =TRUE, conf.int = FALSE, correct= FALSE, na.action = na.exclude)
describeBy(data_dri$Drivers, data_dri$Cat)
boxplot(Drivers~Cat, data=data_dri)
wilcoxDri
rFromWilcox(wilcoxDri, 204)
getwd()
setwd("C:/Users/ga84kuj/Documents/")
getwd()
# Load packages ####
librgetary(readxl)
library(psych)
# Define function for Wilcoxon effect size r ####
rFromWilcox <- function(wilcoxModel, N){
z <- qnorm(wilcoxModel$p.value/2)
r <- z/ sqrt(N)
cat(wilcoxModel$data.name, 'Effect Size, r = ', r)
}
# Import data ####
data_ped <- read_excel("R/3D_zebra/Wilcoxon_data.xlsx", sheet = "Pedestrians")
data_dri <- read_excel("R/3D_zebra/Wilcoxon_data.xlsx", sheet = "Drivers")
# Load packages ####
library(readxl)
library(psych)
#### set directory ####
setwd("C:/Users/ga84kuj/Documents/")
# Define function for Wilcoxon effect size r ####
rFromWilcox <- function(wilcoxModel, N){
z <- qnorm(wilcoxModel$p.value/2)
r <- z/ sqrt(N)
cat(wilcoxModel$data.name, 'Effect Size, r = ', r)
}
# Import data ####
data_ped <- read_excel("R/3D_zebra/Wilcoxon_data.xlsx", sheet = "Pedestrians")
data_dri <- read_excel("R/3D_zebra/Wilcoxon_data.xlsx", sheet = "Drivers")
# Wilcoxon-Tests ####
wilcoxPed <- wilcox.test(Pedestrians~Cat, data = data_ped, paired = TRUE, conf.int = FALSE, correct= FALSE, na.action = na.exclude)
describeBy(data_ped$Pedestrians, data_ped$Cat)
boxplot(Pedestrians~Cat, data=data_ped)
wilcoxPed
rFromWilcox(wilcoxPed, 402)
wilcoxDri <- wilcox.test(Drivers~Cat, data = data_dri, paired =TRUE, conf.int = FALSE, correct= FALSE, na.action = na.exclude)
describeBy(data_dri$Drivers, data_dri$Cat)
boxplot(Drivers~Cat, data=data_dri)
wilcoxDri
rFromWilcox(wilcoxDri, 204)
#### Old Code ####
# Q1	Do [drivers/you] slow down if [pedestrians/you] cross alone?
# Q2	Do [drivers/you] slow down if [pedestrians/you] cross in a group?
# Q3	How risky is it for [pedestrians/you] to cross this part of the road?
# Q4	Do you think this 3D crosswalk is safer than a normal crosswalk?
# Q5	Do you think this 3D crosswalk is safer than no crosswalk?
#
# # Wilcoxon-Tests:
# # not paired, no continuity correction, no confidence intervals, excluding N/A
# # Wilcoxon-Test Q1 ####
# # N = 201 + 102 = 303
# wilcoxQ1 <- wilcox.test(Q1~Group, data = data, paired = FALSE, conf.int = FALSE, correct= FALSE, na.action = na.exclude)
# describeBy(data$Q1, data$Group)
# boxplot(Q1~Group, data=data)
# wilcoxQ1
# rFromWilcox(wilcoxQ1, 303)
#
# # Wilcoxon-Test Q2 ####
# # N = 201 + 102 = 303
# wilcoxQ2 <- wilcox.test(Q2~Group, data = data, paired = FALSE, conf.int = FALSE, correct= FALSE, na.action = na.exclude)
# describeBy(data$Q2, data$Group)
# boxplot(Q2~Group, data=data)
# wilcoxQ2
# rFromWilcox(wilcoxQ2, 303)
#
# # Wilcoxon-Test Q3 ####
# # N = 201 + 102 = 303
# wilcoxQ3 <- wilcox.test(Q3~Group, data = data, paired = FALSE, conf.int = FALSE, correct= FALSE, na.action = na.exclude)
# describeBy(data$Q3, data$Group)
# boxplot(Q3~Group, data=data)
# wilcoxQ3
# rFromWilcox(wilcoxQ3, 303)
#
# # Wilcoxon-Test Q4 ####
# # N = 201 + 75 = 276
# wilcoxQ4 <- wilcox.test(Q4~Group, data = data, paired = FALSE, conf.int = FALSE, correct= FALSE, na.action = na.exclude)
# describeBy(data$Q4, data$Group)
# boxplot(Q4~Group, data=data)
# wilcoxQ4
# rFromWilcox(wilcoxQ4, 276)
#
# # Wilcoxon-Test Q5 ####
# # N = 201 + 75 = 276
# wilcoxQ5 <- wilcox.test(Q5~Group, data = data, paired = FALSE, conf.int = FALSE, correct= FALSE, na.action = na.exclude)
# describeBy(data$Q5, data$Group)
# boxplot(Q5~Group, data=data)
# wilcoxQ5
# rFromWilcox(wilcoxQ5, 276)
help wilcox.test()
wilcox.test()
drug<-gl(2, 10, labels = c("Ecstasy", "Alcohol"))
sundayBDI<-c(15, 35, 16, 18, 19, 17, 27, 16, 13, 20, 16, 15, 20, 15, 16, 13,
14, 19, 18, 18)
wedsBDI<-c(28, 35, 35, 24, 39, 32, 27, 29, 36, 35, 5, 6, 30, 8, 9, 7, 6, 17,
3, 10)
drugData<-data.frame(drug, sundayBDI, wedsBDI)
summary(drugData)
newModel<-wilcox.test(outcome ~ predictor, data = dataFrame, paired = FALSE/
TRUE)
sunModel
sunModel<-wilcox.test(sundayBDI ~ drug, data = drugData)
drug<-gl(2, 10, labels = c("Ecstasy", "Alcohol"))
sundayBDI<-c(15, 35, 16, 18, 19, 17, 27, 16, 13, 20, 16, 15, 20, 15, 16, 13, 14, 19, 18, 18)
wedsBDI<-c(28, 35, 35, 24, 39, 32, 27, 29, 36, 35, 5, 6, 30, 8, 9, 7, 6, 17, 3, 10)
drugData<-data.frame(drug, sundayBDI, wedsBDI)
sunModel<-wilcox.test(sundayBDI ~ drug, data = drugData)
sunModel
wedModel<-wilcox.test(wedsBDI ~ drug, data = drugData)
wedModel
# Load packages ####
library(readxl)
library(psych)
#### set directory ####
setwd("C:/Users/ga84kuj/Documents/")
# Define function for Wilcoxon effect size r ####
rFromWilcox <- function(wilcoxModel, N){
z <- qnorm(wilcoxModel$p.value/2)
r <- z/ sqrt(N)
cat(wilcoxModel$data.name, 'Effect Size, r = ', r)
}
# Import data ####
data_ped <- read_excel("R/3D_zebra/Wilcoxon_data.xlsx", sheet = "Pedestrians")
data_dri <- read_excel("R/3D_zebra/Wilcoxon_data.xlsx", sheet = "Drivers")
# Wilcoxon-Tests ####
wilcoxPed <- wilcox.test(Pedestrians~Cat, data = data_ped, paired = TRUE, conf.int = FALSE, correct= FALSE, na.action = na.exclude)
describeBy(data_ped$Pedestrians, data_ped$Cat)
boxplot(Pedestrians~Cat, data=data_ped)
wilcoxPed
rFromWilcox(wilcoxPed, 402)
sunModel<-wilcox.test(sundayBDI ~ drug, data = drugData)
sunModel
wedModel<-wilcox.test(wedsBDI ~ drug, data = drugData)
wedModel
# Wilcoxon-Tests ####
wilcoxPed <- wilcox.test(Pedestrians~Cat, data = data_ped, paired = TRUE)
wilcoxPed
wilcoxPed <- wilcox.test(Pedestrians~Cat, data = data_ped, paired = TRUE)
wilcoxPed
# Wilcoxon-Tests ####
wilcoxPed <- wilcox.test(Pedestrians~Cat, data = data_ped)
wilcoxPed
1
#### script for descriptive analysis, anova and TOST testing of experimenter rating
# https://statsandr.com/blog/anova-in-r/#introduction
# builds on script 04_Lime_AutLvl_UsabQ_add_shortI+ER-scores.R
#### preparations ####
rm(list = ls())
library(tidyverse)
library(ggplot2);
setwd("~/R/Multilab_Analysis")
#### import data ####
# Read in files
data_all <- read.csv("data/preprocessed/Lime+AutLvl+UsabQ+shortI+ER_all.csv", encoding = "UTF-8")
data_Q <- data_all %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI))
data <- data_Q %>%
dplyr::select(c(Exp, HMI, VPNr, ends_with("_ER"))) %>%
add_column(ER_overall = (.$TC01_ER + .$TC02_ER + .$TC03_ER + .$TC04_ER +
.$TC05_ER + .$TC06_ER + .$TC07_ER + .$TC08_ER +
.$TC09_ER + .$TC10_ER + .$TC11_ER + .$TC12_ER)/12)
View(data)
data <- data_Q %>%
dplyr::select(c(Exp, HMI, VPNr, ends_with("_ER")))
#### script for descriptive analysis, anova and TOST testing of experimenter rating
# https://statsandr.com/blog/anova-in-r/#introduction
# builds on script 04_Lime_AutLvl_UsabQ_add_shortI+ER-scores.R
#### preparations ####
rm(list = ls())
library(tidyverse)
library(ggplot2);
setwd("~/R/Multilab_Analysis")
#### import data ####
# Read in files
data_all <- read.csv("data/preprocessed/Lime+AutLvl+UsabQ+shortI+ER_all.csv", encoding = "UTF-8")
data_Q <- data_all %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI))
data <- data_Q %>%
dplyr::select(c(Exp, HMI, VPNr, ends_with("_ER")))
View(data)
library(reshape2)
data_l <- melt(data, id=c(Exp, HMI, VPNr))
data_l <- melt(data, id=c("Exp", "HMI", "VPNr"))
View(data_l)
data_l2 <- melt(data, id=c("Exp", "HMI"))
View(data_l2)
data <- data_Q %>%
dplyr::select(c(Exp, HMI, ends_with("_ER")))
data_l2 <- melt(data2, id=c("Exp", "HMI"))
data <- data_Q %>%
dplyr::select(c(Exp, HMI, VPNr, ends_with("_ER")))
data_l <- melt(data, id=c("Exp", "HMI", "VPNr"))
data2 <- data_Q %>%
dplyr::select(c(Exp, HMI, ends_with("_ER")))
data_l2 <- melt(data2, id=c("Exp", "HMI"))
View(data_l2)
#### preparations ####
rm(list = ls())
library(tidyverse)
library(ggplot2)
library(reshape2)
setwd("~/R/Multilab_Analysis")
#### import data ####
# Read in files
data_all <- read.csv("data/preprocessed/Lime+AutLvl+UsabQ+shortI+ER_all.csv", encoding = "UTF-8")
data_Q <- data_all %>%
mutate(Exp = factor(Exp)) %>%
mutate(HMI = factor(HMI))
data <- data_Q %>%
dplyr::select(c(Exp, HMI, VPNr, ends_with("_ER")))
data_l <- melt(data, id=c("Exp", "HMI", "VPNr"))
View(data_l)
View(data_l)
plot <- ggplot(data_l, aes(x=Exp, y=value, fill=HMI)) +
geom_violin() +
plot <- ggplot(data_l, aes(x=Exp, y=value, fill=HMI)) +
geom_violin()
plot <- ggplot(data_l, aes(x=Exp, y=value, fill=HMI)) +
geom_violin()
plot
plot <- ggplot(data_l, aes(x=Exp, y=value, fill=HMI)) +
geom_box()
plot
plot <- ggplot(data_l, aes(x=Exp, y=value, fill=HMI)) +
geom_boxplt()
plot <- ggplot(data_l, aes(x=Exp, y=value, fill=HMI)) +
geom_boxplot()
plot
plot <- ggplot(data_l, aes(x=Exp, y=value, fill=HMI)) +
geom_boxplot() +
facet_grid(variable)
plot <- ggplot(data_l, aes(x=Exp, y=value, fill=HMI)) +
geom_boxplot() +
facet_grid(~variable)
plot
plot <- ggplot(data_l, aes(x=Exp, y=value, fill=HMI)) +
geom_violin() +
facet_grid(~variable)
plot
plot <- ggplot(data_l, aes(x=Exp, y=value, fill=HMI)) +
geom_boxplot() +
facet_grid(~variable)
plot
