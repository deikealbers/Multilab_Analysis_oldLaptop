theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
panel.grid.major.x = element_line(size = 0.2, linetype = 2),
legend.position = c(0.9, 0.9),
legend.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=0, vjust=.9, hjust=0.5, face="plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_t <- which(grepl('strip-t', g$layout$name))
fills <- c("#A2AD00", "#E37222") #DAD7CB #E37222
k <- 1
for (i in strip_t) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
plot_23_ER_singleTC <- g
ggsave(filename = "data/results/figures/23_ER_singleTC.png", g,
width = 7, height = 6, dpi = 300, units = "in", device='png')
# # -------------------------------------------------------- 123 visualization #### -------------------------------------------------
# # ---------------------------- 123_SD #### -----------------------------------------------------
# Age
# Experience
# Mileage
# Knowledge
# starts_with("FAS.")
# starts_with("Oft"),
# Weather
# Light
# 123_SD_Age  -----------------------------------------------------
## basic plot ##
p <- ggplot(data, aes(x=HMI, y=Age, fill=HMI)) +
scale_y_continuous(limits = c(15,75), breaks = seq(20,70,10)) +
geom_boxplot() +
facet_wrap(~Exp) +
scale_fill_manual("HMI", values = c("HC" = "#3070b3", "LC" = "#98C6EA")) +
labs(y="Years", x="",
title = "Age") +
stat_summary(fun = mean, geom="point",colour="black", size=2) +
stat_summary(fun.data = fun_mean, geom="text", vjust=1.7, hjust=0.5) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11, face = "plain"),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
panel.grid.major.x = element_blank(),
plot.background = element_rect(fill = "transparent", colour = NA),
axis.text.y=element_text(color = "black", size=9, face = "plain"),
legend.position = "none")
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_t <- which(grepl('strip-t', g$layout$name))
fills <- c("#DAD7CB", "#A2AD00", "#E37222")
k <- 1
for (i in strip_t) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
plot_123_SD_Age <- g
ggsave(filename = "data/results/figures/123_SD_Age.png", g,
width = 9, height = 6, dpi = 300, units = "in", device='png')
# 123_SD_Experience  -----------------------------------------------------
## basic plot ##
p <- ggplot(data, aes(x=HMI, y=Experience, fill=HMI)) +
scale_y_continuous(limits = c(0,4), breaks = seq(0,4, 1),
labels = c("1 -\nnever",
"2 -\nless than\nonce a month",
"3 -\nseveral times\na month",
"4 -\nseveral times\na week",
"5 -\nevery day")) +
geom_violin(fill= "transparent") +
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.3, dotsize=0.13, binwidth = 0.5) +
facet_wrap(~Exp) +
scale_fill_manual("HMI", values = c("HC" = "#3070b3", "LC" = "#98C6EA")) +
labs(y="", x="",
title = "Experience: \n	How often do you drive a car?") +
stat_summary(fun = mean, geom="point",colour="black", size=2) +
stat_summary(fun.data = fun_mean, geom="text", vjust=2.3, hjust=0.5) +
stat_summary(fun = median, geom="point",colour="black", size = 4, shape = 4) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11, face = "plain"),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
panel.grid.major.x = element_blank(),
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.y=element_text(color = "black", size=9, face = "plain"),
legend.position = "none")
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_t <- which(grepl('strip-t', g$layout$name))
fills <- c("#DAD7CB", "#A2AD00", "#E37222")
k <- 1
for (i in strip_t) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
plot_123_SD_Experience <- g
ggsave(filename = "data/results/figures/123_SD_Experience.png", g,
width = 9.75, height = 5, dpi = 300, units = "in", device='png')
# 123_SD_Mileage  -----------------------------------------------------
## basic plot ##
p <- ggplot(data, aes(x=HMI, y=Mileage, fill=HMI)) +
scale_y_continuous(limits = c(0,3), breaks = seq(0,3, 1),
labels = c("< 5.000 km",
"5.001 km -\n10.000 km",
"10.001 km -\n20.000 km",
">20.000 km"
)) +
geom_violin(fill= "transparent") +
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.3, dotsize=0.13, binwidth = 0.5) +
facet_wrap(~Exp) +
scale_fill_manual("HMI", values = c("HC" = "#3070b3", "LC" = "#98C6EA")) +
labs(y="", x="",
title = "Mileage: \nHow many kilometers have you driven in the last 12 months?") +
stat_summary(fun = mean, geom="point",colour="black", size=2) +
stat_summary(fun.data = fun_mean, geom="text", vjust=-1., hjust=0.5) +
stat_summary(fun = median, geom="point",colour="black", size = 4, shape = 4) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11, face = "plain"),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
panel.grid.major.x = element_blank(),
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.y=element_text(color = "black", size=9, face = "plain"),
legend.position = "none")
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_t <- which(grepl('strip-t', g$layout$name))
fills <- c("#DAD7CB", "#A2AD00", "#E37222")
k <- 1
for (i in strip_t) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
plot_123_SD_Mileage <- g
ggsave(filename = "data/results/figures/123_SD_Mileage.png", g,
width = 9.75, height = 5, dpi = 300, units = "in", device='png')
# 123_SD_Knowledge  -----------------------------------------------------
## basic plot ##
p <- ggplot(data, aes(x=HMI, y=Knowledge, fill=HMI)) +
scale_y_continuous(limits = c(0,4), breaks = seq(0,4, 1),
labels = c("0 - no\nknowledge",
"1",
"2",
"3",
"4 -\nexpert"
)) +
geom_violin(fill= "transparent") +
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.3, dotsize=0.13, binwidth = 0.5) +
facet_wrap(~Exp) +
scale_fill_manual("HMI", values = c("HC" = "#3070b3", "LC" = "#98C6EA")) +
labs(y="", x="",
title = "Prior Knowledge: \nDo you have prior knowledge in the field of automated driving?") +
stat_summary(fun = mean, geom="point",colour="black", size=2) +
stat_summary(fun.data = fun_mean, geom="text", vjust=-1.3, hjust=0.5) +
stat_summary(fun = median, geom="point",colour="black", size = 4, shape = 4) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11, face = "plain"),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
panel.grid.major.x = element_blank(),
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.y=element_text(color = "black", size=9, face = "plain"),
legend.position = "none")
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_t <- which(grepl('strip-t', g$layout$name))
fills <- c("#DAD7CB", "#A2AD00", "#E37222")
k <- 1
for (i in strip_t) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
plot_123_SD_Knowledge <- g
ggsave(filename = "data/results/figures/123_SD_Knowledge.png", g,
width = 9.75, height = 5, dpi = 300, units = "in", device='png')
# 123_SD_FAS -----------------------------------------------------------
## subset subscales ##
FAS_CC <- data %>%
select(Exp, VPNr, HMI, FAS.CC) %>%
dplyr::rename(score = FAS.CC) %>%
add_column(scale = "FAS_CC", .after = "VPNr")
FAS_ACC <- data %>%
select(Exp, VPNr, HMI, FAS.ACC) %>%
dplyr::rename(score = FAS.ACC) %>%
add_column(scale = "FAS_ACC", .after = "VPNr")
FAS_LKA <- data %>%
select(Exp, VPNr, HMI, FAS.LKA) %>%
dplyr::rename(score = FAS.LKA) %>%
add_column(scale = "FAS_LKA", .after = "VPNr")
FAS_NoFAS <- data %>%
select(Exp, VPNr, HMI, FAS.NoFAS) %>%
dplyr::rename(score = FAS.NoFAS) %>%
add_column(scale = "FAS_NoFAS", .after = "VPNr")
## build subsets ##
FAS <- bind_rows(FAS_CC, FAS_ACC, FAS_LKA, FAS_NoFAS) %>%
mutate(scale = factor(scale, levels = c("FAS_CC", "FAS_ACC", "FAS_LKA", "FAS_NoFAS"), ordered = TRUE))
FAS_perc <- FAS %>%
select(-c(VPNr)) %>%
group_by(Exp, HMI, scale) %>%
skim_ML() %>%
select(Exp, HMI, scale, numeric.mean) %>%
dplyr::rename(mean = numeric.mean)
## lables ##
labels_FAS = c("CC", "ACC", "LKA", "No FAS")
## n ##
p <- ggplot(FAS, aes(x=scale, y = score, fill=HMI)) +
geom_bar(stat = "identity", width = 0.7) +
scale_x_discrete(labels = labels_FAS) +
scale_y_continuous(limits = c(0,30), breaks = seq(0,30, 5)) +
facet_grid(HMI ~ Exp) +
scale_fill_manual(values = c("#3070b3", "#98C6EA")) +
labs(y="Familiarity with ADAS [n]", x="",
title = "Which driver assistance systems do you already have experience with?") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
legend.position = "none",
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=0, vjust=.88, hjust=0.8, face = "plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_both <- which(grepl('strip-', g$layout$name))
fills <- c("#DAD7CB", "#A2AD00", "#E37222", "#3070b3", "#98C6EA")
k <- 1
for (i in strip_both) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
plot_123_SD_FAS <- g
ggsave(filename = "data/results/figures/123_SD_FAS.png", g,
width = 15, height = 6, dpi = 600, units = "in", device='png')
## Percentage ##
p <- ggplot(FAS_perc, aes(x=scale, y = mean*100, fill=HMI)) +
geom_bar(stat = "identity", width = 0.7) +
scale_x_discrete(labels = labels_FAS) +
scale_y_continuous(limits = c(0,100), breaks = seq(0,100, 20)) +
facet_grid(HMI ~ Exp) +
scale_fill_manual(values = c("#3070b3", "#98C6EA")) +
labs(y="Familiarity with ADAS [%]", x="",
title = "Which driver assistance systems do you already have experience with?") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
legend.position = "none",
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=0, vjust=.88, hjust=0.8, face = "plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_both <- which(grepl('strip-', g$layout$name))
fills <- c("#DAD7CB", "#A2AD00", "#E37222", "#3070b3", "#98C6EA")
k <- 1
for (i in strip_both) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
plot_123_SD_FAS_perc <- g
ggsave(filename = "data/results/figures/123_SD_FAS_perc.png", g,
width = 15, height = 6, dpi = 600, units = "in", device='png')
# 123_SD_Oft_box -----------------------------------------------------------
## subset subscales ##
Oft_CC <- data %>%
select(Exp, VPNr, HMI, OftCC) %>%
dplyr::rename(score = OftCC) %>%
add_column(scale = "Oft_CC", .after = "VPNr")
Oft_ACC <- data %>%
select(Exp, VPNr, HMI, OftACC) %>%
dplyr::rename(score = OftACC) %>%
add_column(scale = "Oft_ACC", .after = "VPNr")
Oft_LKA <- data %>%
select(Exp, VPNr, HMI, OftLKA) %>%
dplyr::rename(score = OftLKA) %>%
add_column(scale = "Oft_LKA", .after = "VPNr")
## build subset ##
Oft <- bind_rows(Oft_CC, Oft_ACC, Oft_LKA) %>%
mutate(scale = factor(scale, levels = c("Oft_CC", "Oft_ACC", "Oft_LKA"), ordered = TRUE))
## lables ##
labels_Oft = c("CC", "ACC", "LKA")
p <- ggplot(Oft, aes(x=scale, y=score, fill=HMI)) +
stat_boxplot(geom ='errorbar', width = 0.3, lwd=0.2) +
geom_boxplot(outlier.shape = 21, lwd=0.2, outlier.size = 0.7) +
stat_summary(fun = mean, geom = "point" , colour="black", size=1, shape = 16) +
scale_x_discrete(labels = labels_Oft) +
scale_y_continuous(limits = c(0,5), breaks = seq(0,5,1),
labels = c("never", "seldom", "every month", "every week", "every day", "several times\na day")) +
facet_grid(HMI ~ Exp) +
scale_fill_manual(values = c("#3070b3", "#98C6EA")) +
labs(y="", x="",
title = "How often do you use the system ...") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
legend.position = "none",
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=30, vjust=.88, hjust=0.8, face = "plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_both <- which(grepl('strip-', g$layout$name))
fills <- c("#DAD7CB", "#A2AD00", "#E37222", "#3070b3", "#98C6EA")
k <- 1
for (i in strip_both) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
plot_123_SD_Oft_box <- g
ggsave(filename = "data/results/figures/123_SD_Oft_box.png", g,
width = 15, height = 6, dpi = 600, units = "in", device='png')
# 123_SD_Oft_dot -----------------------------------------------------------
## subset subscales ##
Oft_CC <- data %>%
select(Exp, VPNr, HMI, OftCC) %>%
dplyr::rename(score = OftCC) %>%
add_column(scale = "Oft_CC", .after = "VPNr")
Oft_ACC <- data %>%
select(Exp, VPNr, HMI, OftACC) %>%
dplyr::rename(score = OftACC) %>%
add_column(scale = "Oft_ACC", .after = "VPNr")
Oft_LKA <- data %>%
select(Exp, VPNr, HMI, OftLKA) %>%
dplyr::rename(score = OftLKA) %>%
add_column(scale = "Oft_LKA", .after = "VPNr")
## build subset ##
Oft <- bind_rows(Oft_CC, Oft_ACC, Oft_LKA) %>%
mutate(scale = factor(scale, levels = c("Oft_CC", "Oft_ACC", "Oft_LKA"), ordered = TRUE))
## lables ##
labels_Oft = c("CC", "ACC", "LKA")
p <- ggplot(Oft, aes(x=scale, y=score, fill=HMI)) +
geom_violin(fill= "transparent") +
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.1, dotsize=0.35, binwidth = 0.5) +
stat_summary(fun = mean, geom = "point" , colour="black", size=1, shape = 16) +
stat_summary(fun = median, geom="point",colour="black", size = 4, shape = 4) +
scale_x_discrete(labels = labels_Oft) +
scale_y_continuous(limits = c(0,5), breaks = seq(0,5,1),
labels = c("never", "seldom", "every month", "every week", "every day", "several times\na day")) +
facet_grid(HMI ~ Exp) +
scale_fill_manual(values = c("#3070b3", "#98C6EA")) +
labs(y="", x="",
title = "How often do you use the system ...") +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
legend.position = "none",
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.x=element_text(color = "black", size=9, angle=30, vjust=.88, hjust=0.8, face = "plain"),
axis.text.y=element_text(color = "black", size=9, face = "plain"))
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_both <- which(grepl('strip-', g$layout$name))
fills <- c("#DAD7CB", "#A2AD00", "#E37222", "#3070b3", "#98C6EA")
k <- 1
for (i in strip_both) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
plot_123_SD_Oft_dot <- g
ggsave(filename = "data/results/figures/123_SD_Oft_dot.png", g,
width = 15, height = 6, dpi = 600, units = "in", device='png')
# 123_SD_Weather  -----------------------------------------------------
## basic plot ##
p <- ggplot(data, aes(x=HMI, y=Weather, fill=HMI)) +
scale_y_continuous(limits = c(0,3), breaks = seq(0,3, 1),
labels = c("sunny,\nblue sky",
"lightly\nclouded",
"heavily\nclouded",
"light\nrain"
)) +
geom_violin(fill= "transparent") +
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.3, dotsize=0.13, binwidth = 0.5) +
facet_wrap(~Exp) +
scale_fill_manual("HMI", values = c("HC" = "#3070b3", "LC" = "#98C6EA")) +
labs(y="", x="",
title = "Weather conditions at beginning of experiment") +
stat_summary(fun = mean, geom="point",colour="black", size=2) +
stat_summary(fun.data = fun_mean, geom="text", vjust=-1.3, hjust=0.5) +
stat_summary(fun = median, geom="point",colour="black", size = 4, shape = 4) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11, face = "plain"),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
panel.grid.major.x = element_blank(),
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.y=element_text(color = "black", size=9, face = "plain"),
legend.position = "none")
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_t <- which(grepl('strip-t', g$layout$name))
fills <- c("#DAD7CB", "#A2AD00", "#E37222")
k <- 1
for (i in strip_t) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
plot_123_SD_Weather <- g
ggsave(filename = "data/results/figures/123_SD_Weather.png", g,
width = 9.75, height = 5, dpi = 300, units = "in", device='png')
# 123_SD_Light  -----------------------------------------------------
## basic plot ##
p <- ggplot(data, aes(x=HMI, y=Light, fill=HMI)) +
scale_y_continuous(limits = c(0, 2), breaks = seq(0, 2, 1),
labels = c("very bright,\nblinding",
"bright",
"gloomy,\ndusky"
)) +
geom_violin(fill= "transparent") +
geom_dotplot(binaxis = 'y', stackdir = 'center',
stackratio=1.1, dotsize=0.08, binwidth = 0.5) +
facet_wrap(~Exp) +
scale_fill_manual("HMI", values = c("HC" = "#3070b3", "LC" = "#98C6EA")) +
labs(y="", x="",
title = "Light conditions at beginning of experiment") +
stat_summary(fun = mean, geom="point",colour="black", size=2) +
stat_summary(fun.data = fun_mean, geom="text", vjust=1.3, hjust=0.5) +
stat_summary(fun = median, geom="point",colour="black", size = 4, shape = 4) +
theme_bw() +
theme(text=element_text(family = "sans", color="black", size=11, face = "plain"),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_line(size = 0.2),
panel.grid.major.x = element_blank(),
plot.background = element_rect(fill = "transparent",
colour = NA_character_),
axis.text.y=element_text(color = "black", size=9, face = "plain"),
legend.position = "none")
p
## change color of facet box (code by CharlotteWoolley , 17 May 2018: https://github.com/tidyverse/ggplot2/issues/2096)
g <- ggplot_gtable(ggplot_build(p))
strip_t <- which(grepl('strip-t', g$layout$name))
fills <- c("#DAD7CB", "#A2AD00", "#E37222")
k <- 1
for (i in strip_t) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
plot_123_SD_Light <- g
ggsave(filename = "data/results/figures/123_SD_Light.png", g,
width = 12.75, height = 5, dpi = 300, units = "in", device='png')
data_all_Gaze <- left_join(data_all_Gaze_TC10, data_all_Gaze_TC12, by = c("Exp", "HMI", "VP"))
#### import data ####
data_all_AR <- read.csv("data/eyetracking/Exp01_Exp03_AR_TC1,4,7_Rready.csv", encoding = "UTF-8")
# preparations --------------------------------------
setwd("C:/Users/ga84kuj/Documents/R/Multilab_Analysis")
#import data --------------------------------------
data_all_AR <- read.csv("data/eyetracking/Exp01_Exp03_AR_TC1,4,7_Rready.csv", encoding = "UTF-8")
data_all_Gaze_TC10 <- read.csv("data/eyetracking/Exp01_Exp03_GazeBehavior_TC10_Rready.csv", encoding = "UTF-8")
# preparations --------------------------------------
setwd("C:/Users/ga84kuj/Documents/R/Multilab_Analysis")
#import data --------------------------------------
data_all_AR <- read.csv("data/eyetracking/Exp01_Exp03_AR_TC1,4,7_Rready.csv", encoding = "UTF-8")
data_all_Gaze_TC10 <- read.csv("data/eyetracking/Exp01_Exp03_GazeBehavior_TC10_Rready.csv", encoding = "UTF-8")
data_all_Gaze_TC12 <- read.csv("data/eyetracking/Exp01_Exp03_GazeBehavior_TC12_Rready.csv", encoding = "UTF-8")
data_all_Gaze <- left_join(data_all_Gaze_TC10, data_all_Gaze_TC12, by = c("Exp", "HMI", "VP"))
data_all_Gaze <- left_join(data_all_Gaze_TC10, data_all_Gaze_TC12, by = c("X.U.FEFF.Exp", "HMI", "VP"))
View(data_all_Gaze)
data_all_Gaze <- left_join(data_all_Gaze_TC10, data_all_Gaze_TC12, by = c("X.U.FEFF.Exp","VP"))
View(data_all_Gaze_TC10)
